{"version":3,"sources":["reportWebVitals.ts","utils/ListItemLink.tsx","components/TopBar.tsx","components/wordCard.tsx","services/api.ts","components/ShowWords.tsx","components/main.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ListItemLink","props","icon","primary","to","secondary","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","useStylesTopBar","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","bgColor","background","drawer","width","drawerHeader","display","alignItems","justifyContent","accountDrawer","accountDrawerHeader","TopBar","classes","useState","isDrawerOpen","setIsDrawerOpen","toggleDrawerOpen","isAccountDrawerOpen","setIsAccountDrawerOpen","toggleAccountDrawerOpen","onClick","AppBar","position","className","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Drawer","paper","anchor","open","Divider","List","useStylesWordCard","root","minWidth","maxWidth","height","borderRadius","borderTopStyle","borderTopColor","WordCard","Card","CardContent","gutterBottom","heading","word","type","definition","CardActions","Button","size","responseBody","Response","JSON","stringify","api","getAllWords","fetch","getAllWordsTest1","Promise","resolve","ShowWords","ListName","paginationCount","setPaginationCount","paginationPage","words","setWords","wordsToShow","setWordsToShow","useEffect","response","clone","json","data","Math","floor","length","displayWords","page","startIndex","endIndex","slice","Grid","container","map","x","index","item","xs","sm","Pagination","showFirstButton","showLastButton","count","siblingCount","onChange","event","Main","Container","style","marginTop","path","createMuiTheme","palette","SW","ThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b5c8694.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\r\n\r\ninterface ListItemLinkProps {\r\n    icon?: React.ReactElement;\r\n    secondary?: string;\r\n    primary: string;\r\n    to: string;\r\n}\r\n\r\nexport function ListItemLink(props: ListItemLinkProps) {\r\n    const { icon, primary, to, secondary } = props;\r\n\r\n    const renderLink = React.useMemo(\r\n        () =>\r\n            React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n                <RouterLink to={to} ref={ref} {...itemProps} />\r\n            )),\r\n        [to],\r\n    );\r\n\r\n    return (\r\n        <li>\r\n            <ListItem button component={renderLink}>\r\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n                <ListItemText primary={primary} secondary={secondary} />\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, Theme, Drawer, List, Divider } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AccountIcon from '@material-ui/icons/AccountCircle'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { ListItemLink } from '../utils/ListItemLink';\r\n\r\nconst useStylesTopBar = makeStyles((theme: Theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    bgColor: {\r\n        background: 'black'\r\n    },\r\n    drawer: { width: 250 },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    accountDrawer: { width: 200 },\r\n    accountDrawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}));\r\n\r\nexport function TopBar() {\r\n    const classes = useStylesTopBar();\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const toggleDrawerOpen = () => setIsDrawerOpen(!isDrawerOpen);\r\n\r\n    const [isAccountDrawerOpen, setIsAccountDrawerOpen] = useState(false);\r\n    const toggleAccountDrawerOpen = () => setIsAccountDrawerOpen(!isAccountDrawerOpen);\r\n    const handleDrawerClose = () => {\r\n        isDrawerOpen && setIsDrawerOpen(false);\r\n        isAccountDrawerOpen && setIsAccountDrawerOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleDrawerClose}>\r\n            <AppBar position=\"static\" className={classes.bgColor}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawerOpen}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        GRE Tool\r\n                    </Typography>\r\n                    <IconButton onClick={toggleAccountDrawerOpen}>\r\n                        <AccountIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer classes={{ paper: classes.drawer }} className={classes.drawer} anchor={\"left\"} open={isDrawerOpen}  >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={toggleDrawerOpen}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItemLink to=\"/dashboard\" primary=\"Dashboard\" />\r\n                    <ListItemLink to=\"/showallwords\" primary=\"Show All Words\" />\r\n                    <ListItemLink to=\"/showlists\" primary=\"Show Lists\" />\r\n                    <Divider />\r\n                    <ListItemLink to=\"/createlist\" primary=\"Create List\" />\r\n                    <ListItemLink to=\"/addwordtolist\" primary=\"Add to List\" />\r\n\r\n                </List>\r\n            </Drawer>\r\n            <Drawer classes={{ paper: classes.accountDrawer }} className={classes.accountDrawer} anchor={\"right\"} open={isAccountDrawerOpen}  >\r\n                <div className={classes.accountDrawerHeader}>\r\n                    <IconButton onClick={toggleAccountDrawerOpen}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItemLink to=\"/settings\" primary=\"Settings\" icon={<SettingsIcon />} />\r\n                    <ListItemLink to=\"/account\" primary=\"Account\" icon={<LockIcon />} />\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStylesWordCard = makeStyles({\r\n    root: {\r\n        minWidth: 300,\r\n        maxWidth: 300,\r\n        height: 200,\r\n        borderRadius: 0,\r\n        borderTopStyle: \"solid\",\r\n        borderTopColor: \"orange\"\r\n    }\r\n});\r\n\r\ninterface IWordCardProps {\r\n    heading?: string,\r\n    word: string,\r\n    definition: string,\r\n    type?: string\r\n}\r\n\r\nexport function WordCard(props: IWordCardProps) {\r\n    const classes = useStylesWordCard();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {props.heading}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {props.word}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                    {props.type}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {props.definition}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","const jsonObj = [\r\n  { word: \"test1\", definition: \"definition1\", type: \"adj\" },\r\n  { word: \"test2\", definition: \"definition2\", type: \"adj\" },\r\n  { word: \"test3\", definition: \"definition3\", type: \"adj\" },\r\n  { word: \"test4\", definition: \"definition4\", type: \"adj\" },\r\n  { word: \"test5\", definition: \"definition5\", type: \"adj\" },\r\n  { word: \"test6\", definition: \"definition6\", type: \"adj\" },\r\n  { word: \"test7\", definition: \"definition7\", type: \"adj\" },\r\n];\r\n\r\nconst responseBody = new Response(JSON.stringify(jsonObj));\r\n\r\nconst api = {\r\n  getAllWords: fetch(\"https://alanswork.com/api/getwords\"),\r\n  getAllWordsTest1: Promise.resolve(responseBody),\r\n};\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { WordCard } from './wordCard';\r\nimport api from '../services/api';\r\n\r\ninterface IShowWordsProps {\r\n    ListName?: string;\r\n}\r\n\r\ninterface IWord {\r\n    word: string;\r\n    definition: string;\r\n    type: string;\r\n}\r\n\r\nexport function ShowWords(props: IShowWordsProps) {\r\n    const { ListName } = props;\r\n    const numberOfWordsToShow: number = 6;\r\n    const [paginationCount, setPaginationCount] = useState<number>(0);\r\n    const [paginationPage, setPaginationPage] = useState<number>();\r\n    const [words, setWords] = useState<IWord[]>([]);\r\n    const [wordsToShow, setWordsToShow] = useState<IWord[]>([]);\r\n\r\n    useEffect(() => {\r\n        api.getAllWords.then(response => response.clone().json()).then((data: IWord[]) => {\r\n            setWords(data);\r\n            setPaginationCount(Math.floor(data.length / numberOfWordsToShow) + 1);\r\n            displayWords(1);\r\n        });\r\n    }, [paginationCount]);\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, page: number) => displayWords(page);\r\n\r\n    function displayWords(page: number) {\r\n        const startIndex = (page - 1) * numberOfWordsToShow;\r\n        const endIndex = startIndex + numberOfWordsToShow;\r\n        const data = words.slice(startIndex, endIndex);\r\n        setWordsToShow(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2} >\r\n                {wordsToShow.map((x, index) => (\r\n                    <Grid item xs={12} sm={'auto'} key={index}>\r\n                        <WordCard word={x.word} definition={x.definition} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Pagination showFirstButton showLastButton count={paginationCount} page={paginationPage} siblingCount={3} size=\"small\" onChange={handlePageChange} />\r\n        </div>\r\n    );\r\n}","import { Container } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { TopBar } from './TopBar'\r\nimport { ShowWords } from './ShowWords';\r\n\r\n\r\nexport function Main() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <TopBar />\r\n                <Container style={{ marginTop: \"20px\" }}>\r\n                    <Switch>\r\n                        <Route path='/dashboard' >\r\n                            dashboard\r\n                        </Route>\r\n                        <Route path='/showallwords' >\r\n                            <ShowWords />\r\n                        </Route>\r\n                        <Route path='/showlists' >\r\n                            showlists\r\n                        </Route>\r\n                        <Route path='/createlist' >\r\n                            createlist\r\n                        </Route>\r\n                        <Route path='/addwordtolist' >\r\n                            addwordtolist\r\n                        </Route>\r\n                        <Route path='/settings' >\r\n                            settings\r\n                        </Route>\r\n                        <Route path='/account' >\r\n                            account\r\n                        </Route>\r\n                        <Route path='/' >\r\n                            Main\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createMuiTheme, CssBaseline } from '@material-ui/core'\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Main } from './components/main'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  },\r\n});\r\n\r\nconst SW = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Main />\r\n  </ThemeProvider>\r\n)\r\n\r\nReactDOM.render(<SW />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}